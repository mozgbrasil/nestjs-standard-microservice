# https://github.com/robingenz/nestjs-vercel-example
#
# https://github.com/mozgbrasil/<REPO>/settings/secrets/actions
#
# GitHub Actions secrets:
#
# VERCEL_TOKEN: Create a token in the Vercel Tokens settings. https://vercel.com/account/tokens

# npx vercel
#
# curl "https://api.vercel.com/v8/projects/?limit=2" -H "Authorization: Bearer <TOKEN>"
#
#  VERCEL_PROJECT_ID = "id"
#  VERCEL_ORG_ID = "accountId"
#
# VERCEL_PROJECT_ID: You find the project id in the cat .vercel/project.json file.
# VERCEL_ORG_ID: You find the organization id in the cat .vercel/project.json file.
#
# HEROKU_API_KEY: https://dashboard.heroku.com/account
# HEROKU_APP_NAME:
# HEROKU_EMAIL:
# 0110-172012

name: üëæÔ∏è‚öôÔ∏è CI
on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
jobs:
  # This workflow contains a multiple jobs
  main:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: üëáÔ∏è Run a one-line script
        run: echo Hello, world!
      # Runs a set of commands using the runners shell
      - name: üëáÔ∏è Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: üëáÔ∏è Run tests
        run: |
          set -o xtrace
          echo "===== a ======"
          echo "===== b ======"
          pwd
          ls
          git --version
          env
  build-web:
    name: Build web assets
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install dependencies
        run: yarn install
      - name: Build web assets
        run: yarn run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install dependencies
        run: yarn install
      - name: Run ESLint and Prettier
        run: yarn run eslint
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install dependencies
        run: yarn install
      - name: Run unit tests
        run: yarn run test
  e2e:
    name: E2E
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install dependencies
        run: yarn install
      - name: Run end-to-end tests
        run: yarn run test:e2e
  # deploy-vercel:
  #   name: Deploy Vercel
  #   if: github.ref == 'refs/heads/develop'
  #   needs: [build-web]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Download
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: dist
  #         path: dist
  #     - name: Vercel Action
  #       uses: amondnet/vercel-action@v20.0.0
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         github-comment: false
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-args: '--prod'
  deploy-heroku:
    name: Deploy Heroku
    if: github.ref == 'refs/heads/develop'
    needs: [build-web]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
  # deploy-netlify:
  #   name: Deploy Netlify
  #   if: github.ref == 'refs/heads/develop'
  #   needs: [build-web]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: jsmrcaga/action-netlify-deploy@v1.1.0
  #       with:
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  #         NETLIFY_DEPLOY_TO_PROD: true
